spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/tripr}
    username: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD:<<YOUR_PASSWORD>>}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  liquibase:
    change-log: classpath:domain/changelog-master.yml
    drop-first: false
  mail:
    host: ${SMTP_HOST:email-smtp.eu-central-1.amazonaws.com}
    username: ${SMTP_USERNAME:<<YOUR_USERNAME>>}
    password: ${SMTP_PASSWORD:<<YOUR_PASSWORD>>}
    port: 587
    properties.mail.smtp:
      auth: true
      starttls:
        enable: true
        required: true
      connectiontimeout: 15000
      timeout: 45000
  docker:
    compose:
      lifecycle-management: start-only
error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
    http-statuses:
      org.springframework.security.authorization.AuthorizationDeniedException: unauthorized
    codes:
      PasswordResetRequestEmailExists: PASSWORD_RESET_REQUEST_EMAIL_EXISTS
      RegistrationRequestEmailUnique: REGISTRATION_REQUEST_EMAIL_UNIQUE
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      show-details: always
springdoc:
  pathsToMatch: /authenticate, /passwordReset/**, /refresh, /register
app:
  baseHost: ${BASE_HOST:http://localhost:4200}
  mail:
    from: bob@invalid.bootify.io
jwt:
  secret: D1A4798A74E1310E0B89079E66FC826E
